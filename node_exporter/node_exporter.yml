---
- name: node_exporter
  hosts: "client"
  tasks:
    - name: Disable SELinux
      selinux:
        state: disabled
    - name: Create the node_exporter group
      group:
        name: node_exporter
        state: present
        system: true
    - name: Create user 
      user:
        name: node_exporter
        groups: node_exporter
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: /      
    - name: Download node_exporter binary to local folder
      become: false
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz"
        dest: "/root/node_exporter-0.18.1.linux-amd64.tar.gz"
        checksum: "sha256:b2503fd932f85f4e5baf161268854bf5d22001869b84f00fd2d1f57b51b72424"
      register: _download_binary
      until: _download_binary is succeeded
      retries: 5
      delay: 2
      check_mode: false
    - name: Unpack node_exporter binary
      become: false
      unarchive:
        src: "/root/node_exporter-0.18.1.linux-amd64.tar.gz"
        dest: "/root"
        remote_src: yes
      check_mode: false
    - name: Create /usr/local/bin
      file:
        path: /usr/local/bin
        state: directory
        mode: 0755
    - name: copy node_exporter
      shell: "cp /root/node_exporter-0.18.1.linux-amd64/node_exporter /usr/local/bin/"
    - name: Propagate node_exporter binaries
      file:
        dest: "/usr/local/bin/node_exporter"
        mode: 0755
        owner: node_exporter
        group: node_exporter
    - name: Add systemd
      copy:
        src: "node_exporter.service"
        dest: "/etc/systemd/system/node_exporter.service"
        mode: 0755
        owner: root
        group: root
    - name: restart node_exporter
      become: true
      systemd:
        daemon_reload: true
        name: node_exporter
        state: restarted
        enabled: yes
    - name: check status firewalld 
      shell: "firewall-cmd --state"
      register: status
      failed_when:
        - status.rc != 0 
        - status.rc != 252
    - name: Firewalld setting 
      firewalld:
        port: 9100/tcp
        immediate: yes
        permanent: true
        state: enabled
      when: status.stdout == 'running'
